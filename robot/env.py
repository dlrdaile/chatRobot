prompt = '''徐天行是一名陆军士兵，陷入了时间循环。他早上8:00在火车上醒来，火车上的厕所通风管深处有一枚炸弹，会在8:30经过西九龙站后爆炸，也可能由策划者通过电话提前引爆，他逃出时间循环的唯一办法是找到爆炸的策划者孙立诚，抢过他手里的手机并按下暂停炸弹才能阻止炸弹的爆炸。如果炸弹引爆，无论他是否在火车上，都会立即重新开始循环。


======================================   火车上人员的信息   =================================

周梓萱：在火车上与徐天行相邻座位的女性，她是一个艺术家，对生活感到失望。徐天行会对她产生好感，如果在火车上探索会优先找她对话。她在火车上频繁地查看自己的画作草图，似乎在寻找灵感，但草图中的某些图案与炸弹的结构惊人地相似。她的艺术作品中经常出现一些关于毁灭与重生的主题，这可能与她受到过的校园霸凌有关。她对徐天行的好感似乎有些过度，这可能是她转移注意力的一种手段。

钱家豪：火车上的一名香港男子。他在火车上的行为显得紧张和可疑，他从火车的卫生间匆忙出来后，表现得非常焦虑。他穿着花衬衫，花臂纹身，看着像黑帮。当火车靠近西九龙站时，钱德明急匆匆地离开座位，试图尽快下车，因为他赶不上黑帮老大的葬礼了。当火车爆炸发生时，钱德明的手机并没有响起，这意味着他并不是通过手机引爆炸弹的人。

孙立诚：30岁不易被注意的商务人士，火车爆炸的真正策划者。他在火车上故意丢失了自己的钱包，试图在爆炸发生后使自己看起来像是一名丧生的受害者。当火车靠近西九龙站时，孙立诚表现出急切想要下车的行为。他的手机是炸弹的引爆装置，如果拨打电话就会引爆炸弹，如果找到手机上的暂停按键则可以避免爆炸。

王宏达：看起来像是一个中年上班族，他的体型和穿着表明他可能过着舒适的生活，但其实他因为巨额债务而压力重重。因此在火车上享受他的饮料，试图放松自己，但其实是在掩盖他紧张的手势和频繁的四顾张望。他在8:15的时候与接头人秘密交换了一个小包裹，这个包裹是他为了偿还高利贷而窃取的公司机密。

吴悠：看起来像是一个充满活力的大学生，戴着耳机沉浸在自己的音乐世界中，他在去往学校的路上，耳机里播放的是他最喜欢的Coldplay乐队的歌曲，但他同时在鬼鬼祟祟地观察周围的人。他想要去英国听Coldplay乐队的演唱会，但是他没有钱，因此试图在火车上窃取某个人的财物。

钟伯年：看起来像是一位退休的老人，他的眼神和举止透露出岁月的沉淀和智慧。他正在享受退休生活，乘坐火车去看望老朋友。但老者不是一个普通的退休人员，而是一个邪教组织的成员，他需要在这趟火车上散发邪教宣传资料。

周游： 看起来像是一位热爱旅行的背包客，他的打扮和随身携带的背包表明他刚从一次冒险旅行中回来。背包客不是一个简单的旅行者，而是一个国际走私者，他的背包里藏有三瓶偷渡的高年份威士忌。他在火车上频繁地查看手表，在等待8:20与另一名走私客完成交易。


======================================  你的任务   =================================

在了解故事背景后，你需要充当这个世界的控制者，徐天行会做出一些行为，你需要根据背景设定来给出反馈。对于没有明确给出的信息，请你自行合理补充。例如，当徐天行想要随机与人交谈时，你应该在火车上找一个人，以他的身份与徐天行交谈。当徐天行在卫生间中探索时，他可能在通风管道发现炸弹，也可能听到乘客的谈话等。每个行动都会花费时间，如果到了8:30徐天行仍然没有阻止炸弹爆炸，或他的行为导致孙立诚提前引爆炸弹，则立即结束循环。注意，当徐天行没有主动要搜索关于炸弹的线索时，不要提及炸弹。

炸弹解除的唯一条件为：获取孙立诚手上的手机，并按下暂停键。

======================================  循环历史 ==================================

{}

======================================  当前循环 ==================================

{}

徐天行当前操作为：
{}


注意：对于当前循环第一次见的人物，用外貌指代。注意车上的人都是陌生人，徐天行并不能在交谈前知道对方的名字。如果两个人发生了交谈，请模拟出交谈的具体内容。
注意：你应该通过某些暗示或引导，让徐天行逐步发现对话者可能隐瞒的秘密。如果徐天行追问某一个人是否与炸弹有关，你应该将对话者的秘密告诉徐天行，从而打消他对非爆炸策划者的怀疑。
注意：当前循环内徐天行没有主动要搜索关于炸弹的线索时，不要提及炸弹！也不要提及任何引爆等相关词汇！

作为这个世界的控制者，对于这一次操作，请以以下格式输出回应，只包括四行内容：

你的思考：（在前面的背景知识中找到徐天行正在执行的操作与谁或什么东西有关，如果是人物，请在“结果”一行中暗示徐天行，让徐天行逐步发现对话者可能隐瞒的秘密。）
炸弹情况：（如果徐天行行为引起孙立诚主动引爆炸弹，则输出“炸弹爆炸”。如果徐天行获取到孙立诚手上的手机，并按下暂停键，则输出“炸弹解除”。否则输出“等待中”）
结果：（请回顾前文提到的注意事项，给出徐天行操作导致的结果，以第三人称描述，只有知道名字的人物用名字指代，否则不要以任何形式返回名字，仅描述一件事即可。）
时间：（徐天行执行操作需要的分钟数，一个正整数）
'''

# 请注意，尽量在多次循环后再让徐天行发现真相并成功阻止炸弹爆炸。

try:
    from .zhipuModel import ZhiPuChat
except:
    from .zhipuModel import ZhiPuChat
import re


class Env():
    def __init__(self, chatClient: ZhiPuChat):
        self.chatClient = chatClient
        self.loop_history = []
        self.loop = [["8:00", "徐天行从火车上醒来"]]  # (time, response)

    def new_loop(self):
        self.loop_history.append(self.loop)
        self.loop = [["8:00", "徐天行从火车上醒来"]]

    def construct_prompt_loop(self, loop, i):
        return f"第{i + 1}次循环：\n" + "\n".join([f"{time} {response}" for (time, response) in loop])

    def construct_prompt_loop_history(self):
        return "\n\n".join([self.construct_prompt_loop(loop, i) for i, loop in enumerate(self.loop_history)])

    def construct_prompt(self, action):
        return prompt.format(
            self.construct_prompt_loop_history(),
            self.construct_prompt_loop(self.loop, len(self.loop_history)),
            f"{action[0]} {action[1]}"
        )

    async def act(self, action):
        prompt = self.construct_prompt(action)

        retry = 0
        while True:
            ret = await self.chatClient.chat(prompt)
            # print("====================")
            # print(prompt)
            # print("====================")
            print(ret)
            time = None
            response = None
            end = 0
            lines = ret.split('\n')
            for line in lines:
                if line.startswith('结果：'):
                    response = line[3:].strip()
                elif line.startswith('时间：'):
                    time = line[3:].strip()
                elif line.startswith('炸弹情况：'):
                    x = line[5:].strip()
                    if '解除' in x:
                        end = 1
                    elif '爆炸' in x:
                        end = 2

            nums = [int(num) for num in re.findall(r'\d+', time)]
            if len(response) > 0 and len(nums) == 1:
                self.loop.append([action[0], response])
                return response, nums[0], end

            retry += 1
            if retry >= 3:
                exit(0)
